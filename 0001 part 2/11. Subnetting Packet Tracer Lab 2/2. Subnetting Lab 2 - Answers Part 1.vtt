WEBVTT

0
00:06.310 --> 00:09.500
Okay, so let's complete the subnetting lab.

1
00:09.550 --> 00:18.910
We were told that previously, network 192 168 1 0 slash 24 was broken up into four subnets to

2
00:19.090 --> 00:23.090
support the various subnets in this lab.

3
00:23.110 --> 00:33.410
So we have 192 168 1.0 slash 26, 64 slash 26 192 26 and 128 26.

4
00:34.270 --> 00:40.690
So going back to my calculations we had 192 168 1.0 slash 24

5
00:40.840 --> 00:42.670
we created 4 subnets.

6
00:42.730 --> 00:54.980
We used this formula to get the subnet to remind you, 2 to the power of N minus 2 is used when asked

7
00:55.160 --> 01:01.620
to work out the number of bits required for a certain number of hosts with subnets.

8
01:01.640 --> 01:05.810
We don't have to subtract 2, so 2 to the power of N was used

9
01:05.930 --> 01:08.810
which gave us four subnets.

10
01:09.030 --> 01:16.820
So the formula 2 to the N or 2 to the power of 2 was used we only had to steal 2 bits from the

11
01:16.910 --> 01:21.560
host portion for subnets and that gave us our 3 subnets.

12
01:21.560 --> 01:31.540
We've now been told to subnet the subnet further, so in the lab we've been told to break up 192 168

13
01:31.540 --> 01:38.500
1 64 slash 26 to support as many subnets as possible with 8 hosts per subnet

14
01:42.460 --> 01:53.540
so this network 192 168 1 64 slash 26 needs to be broken up to support as many subnets as possible

15
01:53.990 --> 02:01.430
with 8 hosts required per subnet, so the formula that we're gonna use is 2 to the power of N minus

16
02:01.430 --> 02:02.340
2.

17
02:02.780 --> 02:07.480
That gives us the number of hosts that we require.

18
02:07.480 --> 02:17.750
So if we work through that, 2 to the power of 1 gives us 2 that will only give us 0 hosts, so

19
02:17.750 --> 02:24.440
that's not enough, 2 to the power of 2 minus 2 gives us 2 hosts also not enough, 2 to the power

20
02:24.440 --> 02:31.210
of 3 minus 2 would give us 6, 2 to the power of 3 is 8 minus 2 gives us 6 not enough, 2 

21
02:31.220 --> 02:39.560
to the power of 4 is 16 minus 2 gives us 14 hosts, so that is enough, 2 to the power of five

22
02:39.560 --> 02:45.860
is 32 minus 2 would give us 30 hosts and we could continue with that but we already know

23
02:46.190 --> 02:51.310
that this is the number of hosts that we require.

24
02:54.360 --> 03:00.990
So we need 4 bits in the host portion which would give us 16 combinations minus 2, one for

25
03:00.990 --> 03:09.450
broadcast, one for network gives us 14 hosts so this is what our original subnet looks like

26
03:12.240 --> 03:24.060
at the moment this is the network subnet portion and this is the host portion we only require 4 bits

27
03:24.090 --> 03:27.330
for the host portion so we can now move

28
03:31.630 --> 03:41.590
2 bits to the new subnet portion so these 2 bits which, which I'll put in green are gonna be our

29
03:41.590 --> 03:53.060
new subnet portion there are no spaces once again in an octet, this is a full octet so 0 1 0 0 followed

30
03:53.060 --> 04:00.380
by 4 zeros but I've just split it to make it easier to see host portion is 4 bits subnet portion

31
04:00.560 --> 04:13.680
is this so if we work out the subnets we have to go through the various binary combinations which would

32
04:13.680 --> 04:24.030
look like that, which you can also do if you want to save time is this is 128, this is 64, this is 32 this

33
04:24.030 --> 04:36.660
is 16 so you can just add 16 to 64 to get to the next subnet so that would be 80 and

34
04:36.660 --> 04:45.180
just to verify that I've done it right 80 in decimal looks like this in binary notice 0101 followed

35
04:45.180 --> 04:54.170
by 4 zeros that's what we've got there and then you can simply add 16 to that and that would

36
04:54.170 --> 04:55.820
be 96

37
04:59.990 --> 05:01.320
96

38
05:01.360 --> 05:05.470
It looks like this in binary which is the same as what I've got here.

39
05:05.550 --> 05:15.470
0110 followed by 4 zeros and then you can simply add 16 to that again which should give us 112.

40
05:15.470 --> 05:17.420
If my math is right.

41
05:17.660 --> 05:21.010
112 looks like that.

42
05:21.170 --> 05:26.960
So zero followed by 3 one's followed by 4 zeros.

43
05:26.960 --> 05:29.780
So those are our new subnets.

44
05:29.780 --> 05:32.960
We've got 4 subnets, each supporting 14 hosts.

45
05:32.960 --> 05:42.400
We only require 8 hosts but we had to use an additional bit because 3 bits wouldn't give us

46
05:42.430 --> 05:44.610
enough hosts we'd only have 6 hosts.

47
05:44.980 --> 05:50.920
So we've had to use 4 bits in binary to give us 16 less 2 which is 14 hosts.

48
05:50.920 --> 05:59.260
We have 4 subnets because we have 2 bits, 2 to the power of 2 gives us 4 subnets.

49
05:59.290 --> 06:10.700
So we've created 4 new subnets from that single subnet so we could allocate this subnet to our new

50
06:10.700 --> 06:22.220
network so this new network would now be 192 168 1

51
06:25.280 --> 06:30.500
64 and it's no longer a slash 26.

52
06:30.500 --> 06:33.710
So I need to update that.

53
06:34.040 --> 06:37.700
It's 8 plus 8

54
06:37.700 --> 06:42.320
16 plus a binary bits 24 plus 4

55
06:42.650 --> 06:43.880
it's 28

56
06:43.880 --> 06:46.730
or if you prefer we originally had 26.

57
06:46.740 --> 06:52.210
We've added an additional 2 bits to the subnet portion so slash 28

58
06:53.000 --> 06:59.480
so this is now slash 28.

59
06:59.570 --> 07:03.470
Now, before I configure the network I just wanna make sure that I've done things right.

60
07:03.560 --> 07:05.150
This network needs to change now.

61
07:05.150 --> 07:07.610
That's what we used originally.

62
07:07.610 --> 07:18.940
What we've been told to do is use the last new subnet you got from 192 168 164 slash 26 and use

63
07:18.940 --> 07:21.490
that with slash 30 mask.

64
07:21.490 --> 07:27.400
So we need to take this subnet and then we need to subnet it again.

65
07:27.400 --> 07:34.980
So this is the new subnet that we want to break up as a slash 30.

66
07:34.990 --> 07:41.770
The reason why we use slash 30 is 2 to the power of 2 minus 2 gives us 2 hosts a WAN link

67
07:41.800 --> 07:49.240
such as a serial link only requires two IP addresses, IP addresses on each side of the link so we can

68
07:50.440 --> 07:59.710
steal 2 bits here for the subnet portion so that would be network.

69
08:00.050 --> 08:05.730
This would be our new subnet and our host portion would only consist of 2 bits.

70
08:05.750 --> 08:07.940
So that would be the first network

71
08:13.980 --> 08:15.340
it's slash 30 mask now

72
08:21.560 --> 08:23.920
next network would look like that.

73
08:23.930 --> 08:26.440
Just go through the binary combinations.

74
08:27.340 --> 08:40.280
So in decimal that's a 4 so it'd be 16, 20, 24 and we could once again verify that by using a calculator.

75
08:40.820 --> 08:48.560
So 1 1 2 looks like that in binary 1 1 6.

76
08:48.560 --> 08:55.300
It looks like that which is correct, 120 looks like that

77
08:55.310 --> 09:01.130
notice 0 followed by 4 ones, 0 followed by 4 ones followed by 3 zeros

78
09:01.130 --> 09:02.860
again there's no gap here.

79
09:03.200 --> 09:08.450
In an octet, I'm only doing that to make it easier to read, 124

80
09:08.960 --> 09:13.060
looks like that and that's also correct.

81
09:13.070 --> 09:18.320
So what I'll do is I'll firstly configure the WAN links because they've changed now.

82
09:19.080 --> 09:28.000
This WAN link needs to be 112 slash 30, 112 slash 30.

83
09:28.660 --> 09:38.960
So this router needs to be configured with the first IP address in that subnet so show run and the serial

84
09:38.960 --> 09:42.700
interface needs to be changed.

85
09:42.740 --> 09:49.170
Interface serial 010 IP address is 192 168 1 113.

86
09:49.220 --> 09:59.550
First IP address in that subnet it's a slash 30 mask OSPF neighbor relationship has come down, routers 

87
09:59.590 --> 10:06.580
require that they have the same subnet on both sides for them to form an OSPF neighbor relationship show

88
10:06.580 --> 10:10.340
run on this side.

89
10:10.960 --> 10:12.910
This IP address needs to change

90
10:19.940 --> 10:33.420
so interface serial 01 slash 0 IP address 192 168 1 114 slash 30 mask, ping 192 168 1

91
10:33.930 --> 10:41.210
113 ping works you can see that to the neighbor relationship has come up so that looks good.

92
10:41.220 --> 10:51.300
So on router 1 neighbor relationship has come up again show IP route shows us default route via 11

93
10:51.300 --> 10:52.440
4.

94
10:52.500 --> 11:04.690
In other words this router is seeing this router as its default gateway or, or gateway of last resort so

95
11:04.760 --> 11:08.760
ping cisco.com can we still get to Cisco.

96
11:08.760 --> 11:20.490
Can this router IP domain lookup IP name server should be called quadruple 8 so ping cisco.com

97
11:25.110 --> 11:32.310
maybe not a problem Packet Tracer let's see if this router can ping the DNS server, yes it can.

98
11:32.300 --> 11:35.520
Can it ping Cisco.com name has resolved.

99
11:35.550 --> 11:38.600
So Internet router can ping Cisco.com

100
11:38.670 --> 11:40.270
What about router 1

101
11:40.350 --> 11:49.170
I was just impatient there, notice it can ping Cisco.com and can it ping Facebook,com, again

102
11:49.360 --> 11:58.870
it can so I can save the configuration I've now successfully updated the Internet router and router 1

103
11:59.470 --> 12:01.930
with the new subnet.

104
12:01.930 --> 12:10.360
Next thing I need to do is configure a subnet on this link so this will be 192 168 1 and I'll

105
12:10.360 --> 12:14.500
choose the next one which is 116 slash 30

106
12:17.650 --> 12:26.050
so notice how I've taken one original subnet this one and I've broken it up into these three.

107
12:26.110 --> 12:35.510
This one is being used now so I can't use that anymore because I've subnetted that into these four subnets

108
12:36.230 --> 12:41.900
but there's nothing stopping you taking one subnet and subdividing it and then subdividing it again

109
12:42.380 --> 12:43.300
like I've done here.